## Varios bugs

- Correr el programa con un debugger, sin agregar flags de
debug. ¿Tienen toda la información que requerían?

Leyendo símbolos desde add_array_segfault.e...(no se encontraron símbolos de depuración)hecho.
(gdb) run

- ¿Qué pasa si ponen el flag de debug? ¿Qué flag de optimización es el
mejor para debuggear?

Leyendo símbolos desde add_array_segfault.e...hecho.
El flag de optimizacion para debuggear es el -O0 (para que detecte bugs de MI codigo, no del codigo optimizado por el compilador)

- Agreguen algún flag para que informe todos los warnings en la
compilación, como `-Wall`. ¿Alguno les da alguna pista de por qué el
programa se rompe?


-----------------

	add_array_static.c

El programa corre pero da un resultado incorrecto. Solucion: detener el contador en las definiciones de a y b en i < n; no en i <= n+1

	add_array_dynamic.c

El programa corre, da el verdadero resultado, pero no deberia!

Solucion es la misma que la anterior

	add_array_segfault.e

Violación de segmento (`core' generado) - thats an error-error

Aca corregir la iteracion no soluciona el problema porque sigue dando el mismo error

Si intento sumar punteros como si fueran enteros, en gdb me encuentro con esto:

Old value = {0x1, 0x40070d <__libc_csu_init+77>, 0x0}
New value = {0x0, 0x40070d <__libc_csu_init+77>, 0x0}

Entonces la solucion esta en NO hacer a a y b punteros en la funcion

